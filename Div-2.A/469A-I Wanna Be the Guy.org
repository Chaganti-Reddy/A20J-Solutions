#+title: I Wanna Be the Guy

There is a game called "I Wanna Be the Guy", consisting of n levels. Little X and his friend Little Y are addicted to the game. Each of them wants to pass the whole game.

Little X can pass only p levels of the game. And Little Y can pass only q levels of the game. You are given the indices of levels Little X can pass and the indices of levels Little Y can pass. Will Little X and Little Y pass the whole game, if they cooperate each other?

*Input*

The first line contains a single integer n (1 ≤  n ≤ 100).

The next line contains an integer p (0 ≤ p ≤ n) at first, then follows p distinct integers a1, a2, ..., ap (1 ≤ ai ≤ n). These integers denote the indices of levels Little X can pass. The next line contains the levels Little Y can pass in the same format. It's assumed that levels are numbered from 1 to n.

*Output*

If they can pass all the levels, print "I become the guy.". If it's impossible, print "Oh, my keyboard!" (without the quotes).

*Examples*

*Input*

#+begin_src txt
4
3 1 2 3
2 2 4


4
3 1 2 3
2 2 3
#+end_src

*Output*

#+begin_src txt
I become the guy.

Oh, my keyboard!
#+end_src

#+begin_quote
*Note*

In the first sample, Little X can pass levels [1 2 3], and Little Y can pass level [2 4], so they can pass all the levels both.

In the second sample, no one can pass level 4.
#+end_quote

*CPP CODE*

#+BEGIN_SRC CPP
#include <bits/stdc++.h>
using namespace std;

int main() {
  int array[250];
  int n, p, q;
  cin >> n >> p;
  int count = 0;

  for (int i = 0; i < p; i++) {
    cin >> array[i];
  }
  cin >> q;
  for (int i = p; i < p + q; i++) {
    cin >> array[i];
  }

  sort(array, array + (p + q));

  for (int i = 0; i < p + q; i++) {
    if (array[i] != array[i + 1]) {
      count++;
    }
  }

  if (n == (count)) {
    cout << "I become the guy." << endl;
  } else {
    cout << "Oh, my keyboard!" << endl;
  }

  return 0;
}
#+END_SRC
