#+title: Parallelepiped

You've got a rectangular parallelepiped with integer edge lengths. You know the areas of its three faces that have a common vertex. Your task is to find the sum of lengths of all 12 edges of this parallelepiped.

*Input*

The first and the single line contains three space-separated integers — the areas of the parallelepiped's faces. The area's values are positive ( > 0) and do not exceed 10^4. It is guaranteed that there exists at least one parallelepiped that satisfies the problem statement.

*Output*

Print a single number — the sum of all edges of the parallelepiped.

*Examples*

*Input*

#+begin_src txt
1 1 1

4 6 6
#+end_src

*Output*

#+begin_src txt
12

28
#+end_src

#+begin_quote
*Note*

In the first sample the parallelepiped has sizes 1 × 1 × 1, in the second one — 2 × 2 × 3.
#+end_quote

*CPP CODE*

#+BEGIN_SRC C++
#include <bits/stdc++.h>
using namespace std;

double findEdges(double s1, double s2, double s3) {
  double a = sqrt(s1 * s2 / s3);
  double b = sqrt(s3 * s1 / s2);
  double c = sqrt(s3 * s2 / s1);
  double sum = a + b + c;
  return 4 * sum;
}

int main() {
  double s1, s2, s3;
  cin >> s1 >> s2 >> s3;
  cout << findEdges(s1, s2, s3) << "\n";
  return 0;
}
#+END_SRC
