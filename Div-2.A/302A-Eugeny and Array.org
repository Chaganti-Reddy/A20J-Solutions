#+title: Eugeny and Array

Eugeny has array a = a1, a2, ..., an, consisting of n integers. Each integer ai equals to -1, or to 1. Also, he has m queries:

Query number i is given as a pair of integers li, ri (1 ≤ l_i ≤ r_i ≤ n).
The response to the query will be integer 1, if the elements of array a can be rearranged so as the sum al_i + al_i + 1 + ... + ar_i = 0, otherwise the response to the query will be integer 0.
Help Eugeny, answer all his queries.

*Input*

The first line contains integers n and m (1 ≤ n, m ≤ 2·10^5). The second line contains n integers a1, a2, ..., an (ai = -1, 1). Next m lines contain Eugene's queries. The i-th line contains integers li, ri (1 ≤ li ≤ ri ≤ n).

*Output*

Print m integers — the responses to Eugene's queries in the order they occur in the input.

*Examples*

*Input*

#+begin_src txt
2 3
1 -1
1 1
1 2
2 2
#+end_src

*Output*

#+begin_src txt
0
1
0
#+end_src

*Input*

#+begin_src txt
5 5
-1 1 1 1 -1
1 1
2 3
3 5
2 5
1 5

#+end_src

*Output*

#+begin_src txt
0
1
0
1
0
#+end_src

*CPP CODE*

#+BEGIN_SRC C++
#include <algorithm>
#include <cstdio>

using namespace std;

int main() {
  int n, m, a, l, r, c(0), d(0);
  scanf("%d%d", &n, &m);
  while (n--) {
    scanf("%d", &a);
    if (a == 1) {
      c += 1;
    } else {
      d += 1;
    }
  }
  int up = min(c, d) * 2;
  while (m--) {
    scanf("%d%d", &l, &r);
    printf((r - l) % 2 == 1 && r - l < up ? "1\n" : "0\n");
  }
  return 0;
}
#+END_SRC
