#+title: Cut Ribbon

Polycarpus has a ribbon, its length is n. He wants to cut the ribbon in a way that fulfils the following two conditions:

  + After the cutting each ribbon piece should have length a, b or c.
  + After the cutting the number of ribbon pieces should be maximum.

Help Polycarpus and find the number of ribbon pieces after the required cutting.

*Input*

The first line contains four space-separated integers n, a, b and c (1 ≤ n, a, b, c ≤ 4000) — the length of the original ribbon and the acceptable lengths of the ribbon pieces after the cutting, correspondingly. The numbers a, b and c can coincide.

*Output*

Print a single number — the maximum possible number of ribbon pieces. It is guaranteed that at least one correct ribbon cutting exists.

*Examples*

*Input*

#+begin_src txt
5 5 3 2

7 5 5 2
#+end_src

*Output*

#+begin_src txt
2

2
#+end_src

#+begin_quote
*Note*

In the first example Polycarpus can cut the ribbon in such way: the first piece has length 2, the second piece has length 3.

In the second example Polycarpus can cut the ribbon in such way: the first piece has length 5, the second piece has length 2.
#+end_quote


*CPP CODE*

#+BEGIN_SRC C++
#include <bits/stdc++.h>
using namespace std;
int main() {
  long int i, j, a, b, c, n, k, ans, rem;
  while (cin >> n >> a >> b >> c) {
    ans = 0;
    for (i = 0; i * a <= n; ++i) {
      for (j = 0; i * a + j * b <= n; ++j) {
        rem = n - i * a - j * b;
        if (rem % c == 0) {
          k = rem / c;
          ans = max(ans, i + j + k);
        }
      }
    }
    cout << ans << endl;
  }
  return 0;
}
#+END_SRC
